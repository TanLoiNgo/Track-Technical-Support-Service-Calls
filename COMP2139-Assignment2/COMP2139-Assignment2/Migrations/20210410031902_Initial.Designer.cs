// <auto-generated />
using System;
using COMP2139_Assignment1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COMP2139_Assignment1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210410031902_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("COMP2139_Assignment1.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 4,
                            Name = "France"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 6,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Vietnam"
                        });
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "55 Lapp St",
                            City = "San Francisco",
                            CountryId = 1,
                            Email = "kanthoni@gpe.com",
                            FirstName = "Kaitlyn",
                            LastName = "Anthoni",
                            Phone = "416 555 1111",
                            PostalCode = "M6N 3W5",
                            State = "LA"
                        },
                        new
                        {
                            Id = 2,
                            Address = "55 Lapp St",
                            City = "Washington",
                            CountryId = 1,
                            Email = "ania@mma.nidc.com",
                            FirstName = "Ania",
                            LastName = "Irvin",
                            Phone = "416 547 3543",
                            PostalCode = "M6N 3W5",
                            State = "LA"
                        },
                        new
                        {
                            Id = 3,
                            Address = "71 Lapp St",
                            City = "Toronto",
                            CountryId = 3,
                            Email = "Zoon@mma.nidc.com",
                            FirstName = "Gonzaloo",
                            LastName = "Keeton",
                            Phone = "416 547 5555",
                            PostalCode = "M6N 3W5",
                            State = "ON"
                        },
                        new
                        {
                            Id = 4,
                            Address = "111 Lapp St",
                            City = "Toronto",
                            CountryId = 3,
                            Email = "King@mma.nidc.com",
                            FirstName = "King",
                            LastName = "Kee",
                            Phone = "416 547 9999",
                            PostalCode = "M6N 3W5",
                            State = "ON"
                        });
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DateClosed = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Program fails with error code 510, unable to open database",
                            ProductId = 1,
                            TechnicianId = 1,
                            Title = "Error launching program"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 3,
                            DateOpened = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Program fails with error code 500, unable to open database",
                            ProductId = 2,
                            TechnicianId = 2,
                            Title = "Could not install"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            DateOpened = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Program fails with error code 510, unable to open database",
                            ProductId = 3,
                            Title = "Error importing data"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 2,
                            DateClosed = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Program fails with error code 510, unable to open database",
                            ProductId = 2,
                            Title = "Error launching program"
                        });
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("YearlyPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TRNY10",
                            Name = "Tournament Master 1.0",
                            ReleasedDate = new DateTime(2015, 1, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            Id = 2,
                            Code = "LEAG10",
                            Name = "League Scheduler 1.0",
                            ReleasedDate = new DateTime(2016, 5, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            Id = 3,
                            Code = "LEAGD",
                            Name = "League Scheduler Deluxe 1.0",
                            ReleasedDate = new DateTime(2017, 1, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            YearlyPrice = 7.9900000000000002
                        });
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Registration", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CustomerId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            CustomerId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CustomerId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            CustomerId = 3,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Technician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alison@sportsprosoftware.com",
                            Name = "Alison Diaz",
                            Phone = "800 555 0443"
                        },
                        new
                        {
                            Id = 2,
                            Email = "AWilson@sportsprosoftware.com",
                            Name = "Andrew Wilson",
                            Phone = "800 555 9999"
                        },
                        new
                        {
                            Id = 3,
                            Email = "GFiori@sportsprosoftware.com",
                            Name = "Gina Fiori",
                            Phone = "800 555 7777"
                        });
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Customer", b =>
                {
                    b.HasOne("COMP2139_Assignment1.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Incident", b =>
                {
                    b.HasOne("COMP2139_Assignment1.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP2139_Assignment1.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP2139_Assignment1.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Registration", b =>
                {
                    b.HasOne("COMP2139_Assignment1.Models.Customer", "Customer")
                        .WithMany("Registrations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP2139_Assignment1.Models.Product", "Product")
                        .WithMany("Registrations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Customer", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Product", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
